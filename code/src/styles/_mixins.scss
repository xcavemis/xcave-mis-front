
@mixin set-size($w, $h) {
	width: $w;
    height: $h;
}

@mixin center-x($position: relative) {
	position: $position;
	left: 50%;
	@include transform(translateX(-50%));
}

@mixin center-y($position: relative) {
	position: $position;
	top: 50%;
	@include transform(translateY(-50%));
}

@mixin center($position: relative) {
	position: $position;
	left: 50%;
 	top: 50%;
  	@include transform(translateX(-50%) translateY(-50%));
}

@mixin transform($transforms) {
	-moz-transform: $transforms;
	-o-transform: $transforms;
	-ms-transform: $transforms;
	-webkit-transform: $transforms;
	transform: $transforms;
}

@mixin no-antialias() {
	font-smooth: never;
	-webkit-font-smoothing: none;
}

@mixin input-placeholder {
    &::placeholder { @content; }
    &:-moz-placeholder { @content; }
    &::-moz-placeholder { @content; }
    &:-ms-input-placeholder { @content; }
    &::-webkit-input-placeholder { @content; }
}

@mixin font-size($target) {
  $em: ($target / 17);
  font-size: #{$target}px;
  font-size: #{$em}em;
}

@mixin font-scale($minW, $maxW, $minFont, $maxFont) {
  font-size: #{$minFont}px;

  @media (min-width: #{$minW}px) and (max-width: #{$maxW}px){
    font-size: calc(#{$minFont}px + (#{$maxFont} - #{$minFont}) * ( (100vw - #{$minW}px) / ( #{$maxW} - #{$minW})));
  }
  @media (min-width: #{$maxW}px){
    font-size: #{$maxFont}px;
  }
}

@mixin scrollbar($size, $primary, $secondary: lighten($primary, 25%), $url-track: "") {

    ::-webkit-scrollbar {
        width:  $size;
        height: $size;
    }

    ::-webkit-scrollbar-thumb {
        background: $primary;
        cursor: pointer;

        @if $url-track != "" {
        	// background: url($url-track) no-repeat;
        	// background-size: 100% 100%;
        }
    }

    ::-webkit-scrollbar-track {
        background: $secondary;
    }

    body {
        scrollbar-face-color: $primary;
        scrollbar-track-color: $secondary;
    }
}

@mixin bg-color($color: $blue-two){
	background: $color;
}

@mixin set-border($thickness: 2px, $color: $blue-two, $type: solid){
	border: $thickness $color $type;
}

@mixin animation($animate...) {
    $max: length($animate);
    $animations: '';

    @for $i from 1 through $max {
        $animations: #{$animations + nth($animate, $i)};

        @if $i < $max {
            $animations: #{$animations + ", "};
        }
    }

    -webkit-animation: $animations;
    -moz-animation:    $animations;
    -o-animation:      $animations;
    animation:         $animations;
}

@mixin keyframes($animationName) {
    @-webkit-keyframes #{$animationName} {
        @content;
    }
    @-moz-keyframes #{$animationName} {
        @content;
    }
    @-o-keyframes #{$animationName} {
        @content;
    }
    @keyframes #{$animationName} {
        @content;

    }
}


@mixin maxWidth($w) {
	@media screen and (max-width: $w + px) {
		@content;
	}
}
@mixin minWidth($w) {
	@media screen and (min-width: $w + px) {
		@content;
	}
}

@mixin maxHeight($h) {
	@media screen and (max-height: $h + px) {
		@content;
	}
}
@mixin minHeight($h) {
	@media screen and (min-height: $h + px) {
		@content;
	}
}

@mixin apply-font($name: robotoregular, $size: 1rem) {
	font-family: $name;
	font-size: $size;
}

@mixin mobile-pixelRatio() {
	@media only screen
		and (min-device-width : 320px)
		and (max-device-width : 480px)
		and (-webkit-min-device-pixel-ratio: 2),
		only screen and (-webkit-min-device-pixel-ratio: 1.3) and (max-device-width : 1195px),
		only screen and (-o-min-device-pixel-ratio: 13/10) and (max-device-width : 1195px),
		only screen and (min-resolution: 120dpi) and (max-device-width : 1195px),
		only screen and (min--moz-device-pixel-ratio: 2) and (max-device-width : 1195px),
		only screen and (-o-min-device-pixel-ratio: 2/1) and (max-device-width : 1195px),
		only screen and (-device-pixel-ratio: 2) and (max-device-width : 1195px),
		only screen and (min-resolution: 192dpi) and (max-device-width : 1195px),
		only screen and ( min-resolution: 2dppx) and (max-device-width : 1195px)
	 {
		@content;
	}
}

@mixin mobile-portrait() {
	@media screen and (orientation:portrait)
	{
		@content;
	}
}

@mixin mobile-landscape() {
	@media screen and (orientation:landscape)
	{
		@content;
	}
}

@mixin proportional-box($a: 1, $b: $a) {
	position: absolute;
  top: 0; left: calc(50% - #{$a/$b/2*100%});
  width: $a/$b*100%; height: 100%;

  @media (max-aspect-ratio: #{$a}/#{$b}) {
    top: calc(50% - #{$b/$a/2*100%}); left: 0;
    width: 100%; height: $b/$a*100%;
  }
}

@mixin gradientBuilder($total) {
  $index: 0;
  $idx: 1;
	@while ($index < $total){
		&.gradient-#{$idx} {
      .line{
        background-color: nth(nth($gradients, $idx), 1);
      }
		}
    $idx: ($index % 26) + 1;
		$index: $index + 1;
	}
}
